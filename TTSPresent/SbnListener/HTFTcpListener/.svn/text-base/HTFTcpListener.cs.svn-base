using System;
using System.Collections.Generic;
using System.Text;
using System.Threading;
using System.Net.Sockets;
using System.Net;

namespace HTFTcpListener
{
    public static class HTFTcpListener
    {
        public static string _ServerIPAddress = "";
        public static string _ReceivedData = "";
        static Thread _thread = null;
        public static void StartListener(string ServerIPAddress)
        {
            try
            {
                _ServerIPAddress = ServerIPAddress;
                _thread = new Thread(new ThreadStart(HTFListener));
                _thread.SetApartmentState(ApartmentState.STA);
                _thread.Start();
            }
            catch
            {
                throw;
            }

        }

        public static void StopListener(string ServerIPAddress)
        {
            _thread.Abort();

            try
            {
                server.Stop();

            }
            catch
            {
            }
        }

        static TcpListener server = null;
        static void HTFListener()
        {
            try
            {
                // Set the TcpListener on port 13000.
                Int32 port = 13000;
                IPAddress localAddr = IPAddress.Parse(_ServerIPAddress);

                // TcpListener server = new TcpListener(port);
                server = new TcpListener(localAddr, port);

                // Start listening for client requests.
                server.Start();

                // Buffer for reading data
                Byte[] bytes = new Byte[256];
                String data = null;

                // Enter the listening loop.
                while (true)
                {
                    //                    label3.Text = "Waiting for a connection... ";

                    // Perform a blocking call to accept requests.
                    // You could also user server.AcceptSocket() here.
                    TcpClient client = server.AcceptTcpClient();
                    //                  label1.Text = "Connected!";

                    data = null;

                    // Get a stream object for reading and writing
                    NetworkStream stream = client.GetStream();

                    int i;

                    // Loop to receive all the data sent by the client.
                    while ((i = stream.Read(bytes, 0, bytes.Length)) != 0)
                    {
                        // Translate data bytes to a ASCII string.
                        data = System.Text.Encoding.ASCII.GetString(bytes, 0, i);
                        //                    label2.Text = "Received: {0}" + data;



                        // Process the data sent by the client.
                        //data = data.ToUpper();

                        _ReceivedData = data;

                        byte[] msg = System.Text.Encoding.ASCII.GetBytes(data);

                        // Send back a response.
                        stream.Write(msg, 0, msg.Length);
                        //Console.WriteLine("Sent: {0}", data);

                    }

                    // Shutdown and end connection
                    client.Close();
                }
            }
            catch 
            {
                throw ;
            }
            finally
            {
                // Stop listening for new clients.
                server.Stop();
            }

        }


    }
}
